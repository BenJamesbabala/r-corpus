useDynLib(corpus, .registration = TRUE, .fixes = "C_")

## Exports
export(as_text)
export(as_text.default)
export(is_text)
export(is_text.default)
export(read_ndjson)
export(sentences)
## export(text) # don't export, clashes with graphics::text
export(text_filter)
export(tokens)

## Methods
S3method(`$`, dataset)
S3method(`[`, dataset)
S3method(`[`, text)
S3method(`[[`, dataset)
S3method(`[[`, text)
S3method(all.equal, text)
S3method(anyNA, text)
S3method(as.character, dataset)
S3method(as.character, text)
S3method(as.complex, text)
S3method(as.Date, text)
S3method(as.data.frame, dataset)
S3method(as.data.frame, text)
S3method(as.double, dataset)
S3method(as.integer, dataset)
S3method(as.list, dataset)
S3method(as.logical, dataset)
S3method(as.logical, text)
S3method(as_text, character)
S3method(as_text, dataset)
S3method(as_text, default)
S3method(dim, dataset)
S3method(dim, text)
S3method(dimnames, dataset)
S3method(is.character, text)
S3method(is.na, text)
S3method(is_text, default)
S3method(format, text)
S3method(length, dataset)
S3method(length, text)
S3method(names, dataset)
S3method(names, text)
S3method(`names<-`, text)
S3method(print, dataset)
S3method(print, text)
S3method(print, text_filter)
S3method(Ops, text)
S3method(summary, text)
